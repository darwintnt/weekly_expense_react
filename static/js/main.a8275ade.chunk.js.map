{"version":3,"sources":["serviceWorker.js","components/modules/FormExpense.js","components/modules/Expense.js","components/modules/ListExpenses.js","helpers.js","components/modules/Remaining.js","components/modules/Estimate.js","components/modules/EstimateControl.js","components/Weekly.js","index.js"],"names":["Boolean","window","location","hostname","match","FormExpense","nameExpense","React","createRef","costExpense","createExpense","e","preventDefault","expense","name","_this","current","value","cost","props","addExpense","currentTarget","reset","react_default","a","createElement","onSubmit","this","className","type","ref","placeholder","Component","Expense","_this$props$expense","ListExpenses","Object","keys","listExpenses","map","key","modules_Expense","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Remaining","restante","estimate","remaining","Estimate","EstimateControl","modules_Estimate","modules_Remaining","Weekly","state","getEstimate","prompt","setState","expenses","objectSpread","concat","Date","now","subtractExpense","String","modules_FormExpense","modules_ListExpenses","modules_EstimateControl","ReactDOM","render","components_Weekly","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8275ade.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormExpense extends Component {\r\n\r\n\r\n   nameExpense = React.createRef();\r\n   costExpense = React.createRef();\r\n\r\n\r\n   createExpense = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const expense = {\r\n         name: this.nameExpense.current.value,\r\n         cost: this.costExpense.current.value\r\n      }      \r\n      \r\n      this.props.addExpense(expense);\r\n      \r\n      e.currentTarget.reset();\r\n   \r\n   }\r\n\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div>\r\n            <form onSubmit={this.createExpense}>\r\n               <div className=\"uk-form-controls\">\r\n                  <label>Nombre del Gasto</label>\r\n                  <input className=\"uk-input\" type=\"text\" ref={this.nameExpense} placeholder=\"Ej. Pago Factura Luz\"/>\r\n               </div>\r\n               <div className=\"uk-form-controls\">\r\n                  <label>Costo del Gasto</label>\r\n                  <input className=\"uk-input\" type=\"text\" ref={this.costExpense} placeholder=\"Ej. 50000\" />\r\n               </div>\r\n\r\n               <button className=\"uk-button uk-button-secondary uk-width-1-1@m\">Agregar</button>\r\n            </form>\r\n\r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nFormExpense.propTypes = {\r\n   addExpense : PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default FormExpense","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Expense extends Component {\r\n\r\n   render(){\r\n\r\n      const {name, cost} = this.props.expense;\r\n\r\n      return(\r\n         \r\n         <tr>\r\n            <td>{name}</td>\r\n            <td>\r\n               <span className=\"uk-badge\">\r\n                  {cost}\r\n               </span>\r\n            </td>\r\n         </tr>\r\n      )\r\n   }\r\n}\r\n\r\nExpense.propTypes = {\r\n   expense : PropTypes.object.isRequired\r\n}\r\n\r\nexport default Expense","import React, { Component } from 'react';\r\nimport Expense from './Expense';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ListExpenses extends Component {\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div>\r\n            <div>\r\n               <table className=\"uk-table uk-table-small\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Gasto</th>\r\n                        <th>Costo</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {Object.keys(this.props.listExpenses).map( key => (\r\n\r\n                        <Expense \r\n                           key={key}\r\n                           expense = {this.props.listExpenses[key]} />\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n\r\n         </div>\r\n\r\n      )\r\n   }\r\n}\r\n\r\nListExpenses.propTypes = {\r\n   listExpenses : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ListExpenses","export const validarPresupuesto = presupuesto => {\r\n\r\n   let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\r\n\r\n   if(totalPresupuesto > 0 ) {\r\n       return totalPresupuesto;\r\n   } else {\r\n       return false;\r\n   }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n   let clase;\r\n   // Comprobar el 25% \r\n   if( (presupuesto / 4) > restante) {\r\n        clase = 'uk-alert uk-alert-danger uk-padding-small';\r\n   } else if( (presupuesto / 2) > restante) {\r\n       clase = 'uk-alert uk-alert-warning uk-padding-small'\r\n   } else {\r\n       clase = 'uk-alert uk-alert-success uk-padding-small';\r\n   }\r\n   return clase;\r\n} ","import React, { Component } from 'react';\r\nimport { revisarPresupuesto } from '../../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Remaining extends Component {\r\n\r\n   render(){\r\n\r\n      let estimate = this.props.estimate;\r\n      let remaining = this.props.remaining;\r\n\r\n      return(         \r\n\r\n         <div className={ revisarPresupuesto(estimate,remaining) }>\r\n            <p>Restante: {this.props.remaining}</p>\r\n         </div>           \r\n\r\n      )\r\n   }\r\n}\r\n\r\nRemaining.propTypes = {\r\n   remaining : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Remaining","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Estimate extends Component {\r\n\r\n   render(){\r\n\r\n      return(         \r\n\r\n         <div className=\"uk-alert uk-alert-primary uk-padding-small\">\r\n            <p>Presupuesto: {this.props.estimate}</p>\r\n         </div>           \r\n\r\n      )\r\n   }\r\n\r\n}\r\n\r\nEstimate.propTypes = {\r\n   estimate : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Estimate","import React, { Component } from 'react';\r\nimport Remaining from './Remaining';\r\nimport Estimate from './Estimate';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EstimateControl extends Component {\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div>\r\n            <Estimate \r\n               estimate={this.props.estimate}\r\n            />\r\n            <Remaining \r\n               estimate={this.props.estimate}\r\n               remaining={this.props.remaining} \r\n            />\r\n         </div>\r\n         \r\n      )\r\n   }\r\n}\r\n\r\nEstimateControl.propTypes = {\r\n   estimate : PropTypes.string.isRequired,\r\n   remaining : PropTypes.string.isRequired\r\n}\r\n\r\nexport default EstimateControl","import React, { Component } from 'react';\r\nimport '../css/weekly.css';\r\nimport FormExpense from './modules/FormExpense';\r\nimport ListExpenses from './modules/ListExpenses';\r\nimport {validarPresupuesto} from '../helpers';\r\nimport EstimateControl from './modules/EstimateControl';\r\n\r\nclass Weekly extends Component {\r\n\r\n   state = {\r\n      estimate : '',\r\n      remaining : '',\r\n      expense : {}\r\n   }\r\n\r\n   componentDidMount() {\r\n\r\n      this.getEstimate();\r\n\r\n   }\r\n\r\n   getEstimate = () => {\r\n\r\n      let estimate = prompt('Por favor ingrese su presupuesto!');\r\n\r\n      let result = validarPresupuesto(estimate);\r\n\r\n      if(result){\r\n         this.setState({\r\n            estimate: estimate,\r\n            remaining: estimate\r\n         })\r\n      } else {\r\n         this.getEstimate();\r\n      }\r\n\r\n      \r\n   }\r\n\r\n   addExpense = expense => {\r\n\r\n      // tomar una copia del state actual\r\n      const expenses = {...this.state.expense};\r\n\r\n      // agregar gasto al objeto del state\r\n      expenses[`expense${Date.now()}`] = expense;\r\n\r\n      // insertarlo en el state\r\n      this.setState({\r\n         expense: expenses,\r\n      });\r\n\r\n      // Reducir del presupuesto restante\r\n\r\n      this.subtractExpense(expense.cost);\r\n      \r\n   }\r\n\r\n   subtractExpense = cost => {\r\n\r\n      let remaining = String(this.state.remaining - cost);\r\n\r\n      this.setState({\r\n         remaining : remaining\r\n      })\r\n\r\n   }\r\n\r\n   \r\n   render(){\r\n\r\n      return(\r\n\r\n         <div className=\"uk-container container\">\r\n\r\n            <h2 className=\"title\">Gasto Semanal</h2>\r\n            <div className=\"uk-card uk-card-default uk-padding\">\r\n               <div className=\"uk-child-width-1-2@m uk-grid\">\r\n                  <div>\r\n                     <p className=\"sub-title\">Agrega tus gastos aquí</p>\r\n                     <FormExpense\r\n                        addExpense = {this.addExpense}                     \r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <p className=\"sub-title\">Mi Listado</p>\r\n                     <ListExpenses\r\n                        listExpenses = {this.state.expense}                   \r\n                     />\r\n\r\n                  <EstimateControl\r\n                     estimate={this.state.estimate}\r\n                     remaining={this.state.remaining}\r\n                  />\r\n                  </div>\r\n\r\n                  \r\n               </div>           \r\n\r\n            </div>\r\n\r\n\r\n         </div>\r\n\r\n\r\n      )\r\n   }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Weekly\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Weekly from './components/Weekly';\n\nReactDOM.render(<Weekly />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}